#!/usr/bin/python
# -*- coding: utf-8 -*-

import optparse
from socket import *
from threading import *
from termcolor import colored

screenLock = Semaphore(value=1)

def connScan(tgtHost, tgtPort):
	try:
		connSkt = socket(AF_INET, SOCK_STREAM)
		connSkt.connect((tgtHost, tgtPort))
		connSkt.send('ViolentPython\r\n')
		results = connSkt.recv(100)
		screenLock.acquire()
		print '[+] %d/tcp open' % tgtPort
		print '[+] ' + str(results)
	except:
		screenLock.acquire()
		print '[-] %d/tcp closed' % tgtPort
	finally:
		screenLock.release()
		connSkt.close()	

def portScan(tgtHost, tgtPorts):
	try:
		tgtIP = gethostbyname(tgtHost)
	except:
		print "[-] Cannot resolve '%s': Unknown host" %tgtHost
		return

	try:
		tgtName = gethostbyaddr(tgtIP)
		print '\n[+] Scan Results for: ' + tgtName[0]
	except:
		print '\n[+] Scan Results for: ' + tgtIP

	setdefaulttimeout(1)
	for tgtPort in tgtPorts:
		t = Thread(target=connScan,args=(tgtHost,int(tgtPort)))
		t.start()

def main():
	print colored("\n SIMPLE PORTSCANNER \n KAF (KickAssFramework) \n Find us: http://kickassugvgoftuk.onion \n", 'white') 
	tgtHost = raw_input("\n[*] Enter Host / ip to scan (ex. host.com / 127.0.0.1) : ")
	tgtPort = raw_input("\n[*] Enter Scan Port[s] separated by comma (22,23,25,...) : ")
	tgtPorts = str(tgtPort).split(',')

	if (tgtHost == None) | (tgtPorts[0] == None):
		print "No parameters - bye"
		exit(0)

	portScan(tgtHost, tgtPorts)

if __name__ == '__main__':
	main()
