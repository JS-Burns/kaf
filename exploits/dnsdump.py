import dns.resolver
import dns.query
import dns.zone
import socket
import os
import httplib
import sys
from subprocess import call
from termcolor import colored

def get_domain(IP):
	IP = str(IP)
	file = open(output, "r")
    	lines = file.readlines()
	file.close()
	for line in lines:
		if IP in line:
		   break
	else:
		file = open(output, "a")
		file.write(IP+"\n")
		file.close()

	return colored(socket.getfqdn(IP), 'green')

def get_ip(domain):
	domain = str(domain)
	domain = domain[:-1]
	return colored(socket.gethostbyname(domain), 'green')

def get_ip2(domain):
	return colored(socket.gethostbyname(domain), 'green')

def get_status_code(host, path="/"):
    try:
        conn = httplib.HTTPConnection(host)
        conn.request("HEAD", path)
        return colored(conn.getresponse().status, 'green')
    except StandardError:
        return None
	
target = raw_input("TARGET > ")
output = raw_input("OUTPUT > ")
file = open(output, 'w')

print "\n"

call(["clear"])

print colored("Target: " + target + ' [' + socket.gethostbyname(target) + ']\n', 'yellow')

print colored('[!] Trying to get DNS servers.\n', 'yellow')

try:
	answers = dns.resolver.query(target, 'MX')
	for rdata in answers:
	    length = len(rdata.exchange)
	    MX_clear = rdata.exchange[0]
	    full_clear = MX_clear + '.' + target
	    IP = socket.gethostbyname(full_clear)
	    print colored('[+] ' , full_clear, '[' + IP + ']', 'green')
	    file = open(output, "r")
	    lines = file.readlines()
	    file.close()
	    for line in lines:
		if IP in line:
			break
	    else:
			file = open(output, "a")
			file.write(IP+"\n")
			file.close()

except:
    pass


try:
	answers = dns.resolver.query(target, 'A')
	for rdata in answers:
	    print colored('[+] ' , rdata , '[' + get_domain(rdata) + ']', 'green')

except:
     pass
    

try:
	answers = dns.resolver.query(target, 'NS')
	for i in answers:
		print "[+] ", i, '[' + get_ip(i) + ']'
		file = open(output, "r")
	    	lines = file.readlines()
		file.close()
		for line in lines:
			if get_ip(i) in line:
			   break
		else:
			file = open(output, "a")
			file.write(get_ip(i)+"\n")
			file.close()	

except:
    pass

try:
	answers = dns.resolver.query(target, 'SOA')
	for rdata in answers:
	    first = rdata.rname[0]
	    second = rdata.rname[1]
	    third = rdata.rname[2]
	    full_rname = first + '.' + second + '.' + third
	    IP = socket.gethostbyname(IP)
	    file = open(output, "r")
	    lines = file.readlines()
	    file.close()
	    for line in lines:
		if IP in line:
			break
	    else:
		file = open(output, "a")
		file.write(IP+"\n")
		file.close()

	    print colored('[+] ' , full_rname , '[' + IP + ']', 'green')
	    first = rdata.mname[0]
	    second = rdata.mname[1]
	    third = rdata.mname[2]
	    full_mname = first + '.' + second + '.' + third
	    IP = socket.gethostbyname(IP)

	    file = open(output, "r")
	    lines = file.readlines()
	    file.close()
	    for line in lines:
		if IP in line:
			break
	    else:
		file = open(output, "a")
		file.write(IP+"\n")
		file.close()

	    print colored('[+] ' , full_mname , '[' + IP + ']', 'green')

except:
    pass

print colored("\n[!] Checking more DNS servers.\n", 'yellow')
file = open('check/hosts.txt', 'r')
lines = file.read().splitlines()
for line in lines:
	check = str(line)+'.'+target
	response = get_status_code(check)
	if response == 200:
		print colored("[+] " + check, '[' + get_ip2(check) + ']', 'green')
		file2 = open(output, 'r')
		lines = file2.readlines()
		file2.close()
		for line in lines:
			if get_ip(check) in line:
				break
		else:
			file2 = open(output, 'a')
			file2.write(get_ip2(check)+"\n")
			file2.close()
