#!/usr/bin/env python
# -*- coding: utf-8 -*-

import re
import urllib
import urllib2
from cookielib import CookieJar
from PIL import Image

banner = """
  ______                __   _____ __        __  _                          
 / ____/________ ______/ /__/ ___// /_____ _/ /_(_)___  ____    ____  __  __
/ /   / ___/ __ `/ ___/ //_/\__ \/ __/ __ `/ __/ / __ \/ __ \  / __ \/ / / /
/ /___/ /  / /_/ / /__/ ,<  ___/ / /_/ /_/ / /_/ / /_/ / / / / / /_/ / /_/ /
\____/_/   \__,_/\___/_/|_|/____/\__/\__,_/\__/_/\____/_/ /_(_) .___/\__, /  
                                                            /_/    /____/  

Supports: LM, NTLM, md2, md4, md5, md5(md5_hex), md5-half, sha1, sha224,
sha256, sha384, sha512, ripeMD160, whirlpool, MySQL 4.1+ (sha1(sha1_bin))
"""

url = "https://crackstation.net"

def main(hash):
 cookies = CookieJar()
 opener = urllib2.build_opener(urllib2.HTTPCookieProcessor(cookies))
 response = opener.open(url, None)
 content = response.read()

 # check if reCaptcha is found in source
 tokenUlr = re.search(r'https://www\.google\.com/recaptcha/api/challenge\?k=[^"]+', str(content))
 if tokenUlr:
   tokenUlr = tokenUlr.group()
   token = tokenUlr.split("=")[-1]

   # find reCaptcha challenge ID
   response = opener.open(tokenUlr, None)
   content = response.read()
   challenge = re.search("challenge : '(.+?)'", content).group(1)

   # call reload to obtain valid image
   parameters = urllib.urlencode({'c': challenge, 'k': token, 'lang': "en", 'reason': "i", 'type': "image"})
   reloadUrl = "https://www.google.com/recaptcha/api/reload?" + parameters
   response = opener.open(reloadUrl, None)
   content = response.read()
   challenge = re.search(r"Recaptcha\.finish_reload\('([^']+)", str(content)).group(1)

   # load image file
   imageUrl = 'http://www.google.com/recaptcha/api/image?c=' + challenge
   response = opener.open(imageUrl, None)

   # prompt user with image
   with Image.open(response) as image:
     image.show()

   # submit form including reCaptcha fields
   print "\nPlease solve the reCaptcha:"
   userInput = raw_input(">> ")
   if userInput:
     parameters = urllib.urlencode({'hashes': hash, 'recaptcha_challenge_field': challenge, 'recaptcha_response_field': userInput, 'crack': "Crack+Hashes"})
     response = opener.open(url, parameters)
     content = response.read()

     # parse results
     table = re.search(r'<table class="results">(.*)</table>', content)
     if table:
       results = re.findall(r'<td>(.*?)</td>', table.group())
       print "\nResults found:"
       for i in range(0, len(results), 3):
         print "[+] " + results[i] + " " + results[i+1] + ": " + results[i+2]

     else:
       print "[-] No results found or incorrect reCaptcha.."

 return


if __name__ == "__main__":
 print banner
 print "Please enter the hashes you want to crack bellow"
 userInput = raw_input(">> ")
 main(userInput)
